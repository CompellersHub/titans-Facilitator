name: Beta Deployment

run-name: "Deployment started by @${{ github.actor }}"

on:
  workflow_dispatch:

env:
  # REGISTRY: ghcr.io
  # REGISTRY_USERNAME: ${{ github.actor }}
  # REGISTRY_PASSWORD:  ${{ secrets.GITHUB_TOKEN }}

  REGISTRY: ${{ vars.REGISTRY }}
  REGISTRY_USERNAME:  ${{ vars.REGISTRY_USERNAME }}
  REGISTRY_PASSWORD:  ${{ secrets.REGISTRY_PASSWORD }}
  IMAGE_NAME: ${{ vars.REGISTRY }}/frontend/fhub-titans
  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Tag Sha
        id: sha7
        run: echo "value=$( echo ${{ github.sha }} | cut -c 1-7 )"  >> $GITHUB_OUTPUT
        
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.REGISTRY_USERNAME }}
          password: ${{ env.REGISTRY_PASSWORD }}
                 
      - name: Add environmental variable
        run:  echo "${{ vars.ENV_FILE_CONTENT }}" >> .env

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64
          context: .
          file: ./nextjs.Dockerfile
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:${{ steps.sha7.outputs.value }}
            ${{ env.IMAGE_NAME }}:latest
          cache-from: type=registry,ref=${{ env.IMAGE_NAME }}:buildcache
          cache-to: type=registry,ref=${{ env.IMAGE_NAME }}:buildcache,mode=max


  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to Beta Server
        uses: appleboy/ssh-action@v1.2.0 # Use the latest version
        with:
          host: ${{ secrets.SSH_BETA_HOST }}
          username: ${{ secrets.SSH_BETA_USERNAME }}
          key: ${{ secrets.SSH_BETA_PRIVATE_KEY }}
          script: |
            docker login ${{ env.REGISTRY }} -u ${{ env.REGISTRY_USERNAME }} -p ${{ env.REGISTRY_PASSWORD }}
            task frontend:down -- -v
            task frontend:up
            task lbb:restart
            docker image prune -f
